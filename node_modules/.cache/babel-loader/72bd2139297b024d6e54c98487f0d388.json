{"ast":null,"code":"var _jsxFileName = \"/Users/dom/Desktop/development/flatiron/mod3/phase-3-project-favorite-list/favlist-frontend/src/Places.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Location from \"./Location\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [city, setCity] = useState(\"\");\nconst [state, setState] = useState(\"\");\nconst [country, setCountry] = useState(\"\");\n\nfunction handleSave() {\n  fetch('http://localhost:9292/locations', {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({})\n  });\n}\n\nfunction Places(_ref) {\n  let {\n    places\n  } = _ref;\n  const placesArray = places.map(item => /*#__PURE__*/_jsxDEV(Location, {\n    city: item.city,\n    state: item.state,\n    country: item.country,\n    id: item.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 1\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: placesArray\n  }, void 0, false);\n}\n\n_c = Places;\nexport default Places;\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"sources":["/Users/dom/Desktop/development/flatiron/mod3/phase-3-project-favorite-list/favlist-frontend/src/Places.js"],"names":["React","useEffect","useState","Location","city","setCity","state","setState","country","setCountry","handleSave","fetch","method","headers","body","JSON","stringify","Places","places","placesArray","map","item","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAGA,SAASQ,UAAT,GAAqB;AACjBC,EAAAA,KAAK,CAAC,iCAAD,EAAoC;AACrCC,IAAAA,MAAM,EAAE,MAD6B;AAErCC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAF4B;AAGrCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAf;AAH+B,GAApC,CAAL;AAOH;;AAED,SAASC,MAAT,OAAyB;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AAGzB,QAAMC,WAAW,GAAGD,MAAM,CAACE,GAAP,CAAWC,IAAI,iBACnC,QAAC,QAAD;AACA,IAAA,IAAI,EAAEA,IAAI,CAACjB,IADX;AAEA,IAAA,KAAK,EAAEiB,IAAI,CAACf,KAFZ;AAGA,IAAA,OAAO,EAAEe,IAAI,CAACb,OAHd;AAIA,IAAA,EAAE,EAAEa,IAAI,CAACC;AAJT;AAAA;AAAA;AAAA;AAAA,UADoB,CAApB;AASA,sBACA;AAAA,cACCH;AADD,mBADA;AAKC;;KAjBQF,M;AAmBT,eAAeA,MAAf","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport Location from \"./Location\"\n\nconst [city, setCity] = useState(\"\");\nconst [state, setState] = useState(\"\");\nconst [country, setCountry] = useState(\"\");\n\n\nfunction handleSave(){\n    fetch('http://localhost:9292/locations', {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({\n\n        })\n    })\n}\n\nfunction Places({places}){   \n\n\nconst placesArray = places.map(item => (\n<Location\ncity={item.city}\nstate={item.state}\ncountry={item.country}\nid={item.id}\n/>\n))\n\nreturn (\n<>\n{placesArray}\n</>\n)\n}\n\nexport default Places;"]},"metadata":{},"sourceType":"module"}