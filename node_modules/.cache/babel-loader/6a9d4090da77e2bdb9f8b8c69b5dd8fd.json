{"ast":null,"code":"var _jsxFileName = \"/Users/dom/Desktop/phase-3-project/project-3-front-end/src/AddAttraction.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddAttraction() {\n  _s();\n\n  function handleSubmit() {\n    const newItem = {\n      \"name\": attractionState,\n      \"attraction_type\": type,\n      \"notes\": notes\n    };\n    fetch('http://localhost:9292/attractions', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newItem)\n    }); // setPlaces((currentPlaces)=>[...currentPlaces, newItem ])\n    // setType(\"\")\n    // setNotes(\"\")\n    // setAttractions(\"\")\n  }\n\n  const [type, setType] = useState('');\n  const [notes, setNotes] = useState('');\n  const [attractionState, setAttraction] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setType(event.target.value),\n        value: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setNotes(event.target.value),\n        value: notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Attractions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setAttraction(event.target.value),\n        value: attractionState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      onClick: handleSubmit,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddAttraction, \"2MTbTqTyDxzYY9FKNqAADK31pfI=\");\n\n_c = AddAttraction;\nexport default AddAttraction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAttraction\");","map":{"version":3,"sources":["/Users/dom/Desktop/phase-3-project/project-3-front-end/src/AddAttraction.js"],"names":["React","useState","Button","AddAttraction","handleSubmit","newItem","attractionState","type","notes","fetch","method","headers","body","JSON","stringify","setType","setNotes","setAttraction","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AAErB,WAASC,YAAT,GAAuB;AACnB,UAAMC,OAAO,GAAG;AACd,cAAQC,eADM;AAEd,yBAAmBC,IAFL;AAGd,eAASC;AAHK,KAAhB;AAMAC,IAAAA,KAAK,CAAC,mCAAD,EAAsC;AACzCC,MAAAA,MAAM,EAAE,MADiC;AAEzCC,MAAAA,OAAO,EAAC;AAAC,wBAAgB;AAAjB,OAFiC;AAGzCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,OAAf;AAHmC,KAAtC,CAAL,CAPmB,CAYnB;AACA;AACA;AACA;AACD;;AAEH,QAAM,CAACE,IAAD,EAAOQ,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQQ,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,eAAD,EAAkBW,aAAlB,IAAmChB,QAAQ,CAAC,EAAD,CAAjD;AACA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,QAAQ,EAAGiB,KAAD,IAAWH,OAAO,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnC;AAAyD,QAAA,KAAK,EAAEb;AAAhE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,QAAQ,EAAGW,KAAD,IAAWF,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApC;AAA0D,QAAA,KAAK,EAAEZ;AAAjE;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAO,QAAA,QAAQ,EAAGU,KAAD,IAAWD,aAAa,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAzC;AAA+D,QAAA,KAAK,EAAEd;AAAtE;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAEF,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA,kBADJ;AAcH;;GArCQD,a;;KAAAA,a;AAuCT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\"\nimport Button from \"react-bootstrap/Button\";\n\nfunction AddAttraction() {\n\n    function handleSubmit(){\n        const newItem = {\n          \"name\": attractionState,\n          \"attraction_type\": type,\n          \"notes\": notes\n        }\n    \n        fetch('http://localhost:9292/attractions', {\n          method: 'POST',\n          headers:{\"Content-Type\": \"application/json\"},\n          body: JSON.stringify(newItem)\n        })\n        // setPlaces((currentPlaces)=>[...currentPlaces, newItem ])\n        // setType(\"\")\n        // setNotes(\"\")\n        // setAttractions(\"\")\n      }\n      \n    const [type, setType] = useState('')\n    const [notes, setNotes] = useState('')\n    const [attractionState, setAttraction] = useState('')\n    return (\n        <>\n            <form>\n                <label>Type</label>\n                <input onChange={(event) => setType(event.target.value)} value={type}></input>\n                <br></br>\n                <label>notes</label>\n                <input onChange={(event) => setNotes(event.target.value)} value={notes}></input>\n                <br></br>\n                <label>Attractions</label>\n                <input onChange={(event) => setAttraction(event.target.value)} value={attractionState}></input>\n            </form>\n            <Button variant=\"success\" onClick={handleSubmit}>Save</Button>\n        </>)\n}\n\nexport default AddAttraction"]},"metadata":{},"sourceType":"module"}