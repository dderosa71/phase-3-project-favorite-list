{"ast":null,"code":"var _jsxFileName = \"/Users/dom/Desktop/phase-3-project/project-3-front-end/src/Attractions.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Attraction from \"./Attraction.js\";\nimport { useParams } from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Attractions(_ref) {\n  _s();\n\n  let {\n    places\n  } = _ref;\n  const [type, setType] = useState('');\n  const [notes, setNotes] = useState('');\n  const [attractionState, setAttraction] = useState('');\n  const slug = useParams();\n  const slugId = parseInt(slug.id) - 1;\n  console.log(slugId);\n  const location = places[slugId];\n  console.log(location);\n  const attraction = location.attractions;\n  const attractionArray = attraction.map(item => /*#__PURE__*/_jsxDEV(Attraction, {\n    type: item.attraction_type,\n    notes: item.notes,\n    name: item.name,\n    visited: item.visited,\n    id: item.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this));\n\n  function handleSubmit() {\n    fetch('localhost:9292/', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"name\": attractionState,\n        \"attraction_type\": type,\n        \"notes\": notes\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [location.state, \", \", location.city, \" - \", location.country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Attractions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), attractionArray]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add a New Attraction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setType(event.target.value),\n        value: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setNotes(event.target.value),\n        value: notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Attractions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setAttraction(event.target.value),\n        value: attractionState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Attractions, \"dIMRhaSddiMvD8o+S7VmewYFDEU=\", false, function () {\n  return [useParams];\n});\n\n_c = Attractions;\nexport default Attractions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Attractions\");","map":{"version":3,"sources":["/Users/dom/Desktop/phase-3-project/project-3-front-end/src/Attractions.js"],"names":["React","Attraction","useParams","Button","useState","Attractions","places","type","setType","notes","setNotes","attractionState","setAttraction","slug","slugId","parseInt","id","console","log","location","attraction","attractions","attractionArray","map","item","attraction_type","name","visited","handleSubmit","fetch","method","headers","body","JSON","stringify","state","city","country","event","target","value"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Attraction from \"./Attraction.js\"\nimport { useParams } from \"react-router-dom\"\nimport Button from 'react-bootstrap/Button';\nimport {useState} from \"react\"\n\n\nfunction Attractions({ places }) {\n\n  const [type, setType] = useState('')\n  const [notes, setNotes] = useState('')\n  const [attractionState, setAttraction] = useState('')\n  const slug = useParams()\n  const slugId = parseInt(slug.id) - 1\n  console.log(slugId)\n  const location = places[slugId]\n  console.log(location)\n  const attraction = location.attractions\n  const attractionArray = attraction.map(item => (\n    <Attraction\n      type={item.attraction_type}\n      notes={item.notes}\n      name={item.name}\n      visited={item.visited}\n      id={item.id}\n    />\n  ))\n\n  function handleSubmit(){\n    fetch('localhost:9292/', {\n      method: 'POST',\n      headers:{\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({\n        \"name\": attractionState,\n        \"attraction_type\": type,\n        \"notes\": notes\n      })\n    })\n  }\n\n  return (\n    <>\n      <h2>{location.state}, {location.city} - {location.country}</h2>\n      <table>\n        <tr>\n          <th>Type</th>\n          <th>notes</th>\n          <th>Attractions</th>\n        </tr>\n        {attractionArray}\n      </table>\n      <br></br>\n      <p>Add a New Attraction</p>\n      <form>\n        <label>Type</label>\n        <input onChange={(event) => setType(event.target.value)} value={type}></input>\n        <br></br>\n        <label>notes</label>\n        <input onChange={(event) => setNotes(event.target.value)} value={notes}></input>\n        <br></br>\n        <label>Attractions</label>\n        <input onChange={(event) => setAttraction(event.target.value)} value={attractionState}></input>\n      </form>\n      <Button variant=\"success\" >Save</Button>\n\n    </>\n  )\n}\n\nexport default Attractions"]},"metadata":{},"sourceType":"module"}