{"ast":null,"code":"var _jsxFileName = \"/Users/dom/Desktop/development/flatiron/mod3/phase-3-project-favorite-list/favlist-frontend/src/Places.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Location from \"./Location\";\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Places(_ref) {\n  _s();\n\n  let {\n    places,\n    setPlaces\n  } = _ref;\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [lastId, setLastId] = useState(places[places.length - 1][\"id\"]);\n\n  function handleSave() {\n    const newItem = {\n      \"city\": city,\n      \"state\": state,\n      \"country\": country\n    };\n    fetch('http://localhost:9292/locations', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newItem)\n    });\n    setPlaces(currentPlaces => [...currentPlaces, newItem]);\n    setCity(\"\");\n    setState(\"\");\n    setCountry(\"\");\n    setLastId(currentId => currentId + 1);\n  }\n\n  const placesArray = places.map(item => /*#__PURE__*/_jsxDEV(Location, {\n    city: item.city,\n    state: item.state,\n    country: item.country,\n    id: item.id ? item.id : lastId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [placesArray, /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setCity(event.target.value),\n        value: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setState(event.target.value),\n        value: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setCountry(event.target.value),\n        value: country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      onClick: handleSave,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Places, \"RgYEyhw+Og73+cKca9Ww/sQ5E/E=\");\n\n_c = Places;\nexport default Places;\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"sources":["/Users/dom/Desktop/development/flatiron/mod3/phase-3-project-favorite-list/favlist-frontend/src/Places.js"],"names":["React","useEffect","useState","Location","Button","Places","places","setPlaces","city","setCity","state","setState","country","setCountry","lastId","setLastId","length","handleSave","newItem","fetch","method","headers","body","JSON","stringify","currentPlaces","currentId","placesArray","map","item","id","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;;AAEA,SAASC,MAAT,OAAuC;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAuB;AAEnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAACI,MAAM,CAACA,MAAM,CAACU,MAAP,GAAc,CAAf,CAAN,CAAwB,IAAxB,CAAD,CAApC;;AAGA,WAASC,UAAT,GAAsB;AAClB,UAAMC,OAAO,GACb;AAAC,cAAQV,IAAT;AACA,eAASE,KADT;AAEA,iBAAWE;AAFX,KADA;AAIAO,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACrCC,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF4B;AAGrCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAH+B,KAApC,CAAL;AAMAX,IAAAA,SAAS,CAAEkB,aAAD,IAAiB,CAAC,GAAGA,aAAJ,EAAmBP,OAAnB,CAAlB,CAAT;AACAT,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,SAAS,CAAEW,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAT;AACH;;AAED,QAAMC,WAAW,GAAGrB,MAAM,CAACsB,GAAP,CAAWC,IAAI,iBAC/B,QAAC,QAAD;AACI,IAAA,IAAI,EAAEA,IAAI,CAACrB,IADf;AAEI,IAAA,KAAK,EAAEqB,IAAI,CAACnB,KAFhB;AAGI,IAAA,OAAO,EAAEmB,IAAI,CAACjB,OAHlB;AAII,IAAA,EAAE,EAAEiB,IAAI,CAACC,EAAL,GAAUD,IAAI,CAACC,EAAf,GAAoBhB;AAJ5B;AAAA;AAAA;AAAA;AAAA,UADgB,CAApB;AASA,sBACI;AAAA,eACKa,WADL,eAEI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,QAAQ,EAAGI,KAAD,IAAWtB,OAAO,CAACsB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnC;AAAyD,QAAA,KAAK,EAAEzB;AAAhE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,QAAQ,EAAGuB,KAAD,IAAWpB,QAAQ,CAACoB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApC;AAA0D,QAAA,KAAK,EAAEvB;AAAjE;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAO,QAAA,QAAQ,EAAGqB,KAAD,IAAWlB,UAAU,CAACkB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAtC;AAA4D,QAAA,KAAK,EAAErB;AAAnE;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAEK,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA,kBADJ;AAgBH;;GAnDQZ,M;;KAAAA,M;AAqDT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport Location from \"./Location\"\nimport Button from 'react-bootstrap/Button';\n\nfunction Places({ places, setPlaces }) {\n\n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [country, setCountry] = useState(\"\");\n    const [lastId, setLastId] = useState(places[places.length-1][\"id\"])\n\n\n    function handleSave() {\n        const newItem = \n        {\"city\": city,\n        \"state\": state,\n        \"country\": country}\n        fetch('http://localhost:9292/locations', {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newItem)\n        })\n\n        setPlaces((currentPlaces)=>[...currentPlaces, newItem ])\n        setCity(\"\")\n        setState(\"\")\n        setCountry(\"\")\n        setLastId((currentId) => currentId + 1)\n    }\n    \n    const placesArray = places.map(item => (\n        <Location\n            city={item.city}\n            state={item.state}\n            country={item.country}\n            id={item.id ? item.id : lastId}\n        />\n    ))\n\n    return (\n        <>\n            {placesArray}\n            <form>\n                <label>City</label>\n                <input onChange={(event) => setCity(event.target.value)} value={city}></input>\n                <br></br>\n                <label>State</label>\n                <input onChange={(event) => setState(event.target.value)} value={state}></input>\n                <br></br>\n                <label>Country</label>\n                <input onChange={(event) => setCountry(event.target.value)} value={country}></input>\n            </form>\n            <Button variant=\"success\" onClick={handleSave}>Add</Button>\n        </>\n    )\n}\n\nexport default Places;"]},"metadata":{},"sourceType":"module"}