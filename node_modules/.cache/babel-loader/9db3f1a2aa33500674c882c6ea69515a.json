{"ast":null,"code":"var _jsxFileName = \"/Users/dom/Desktop/development/flatiron/mod3/phase-3-project-favorite-list/favlist-frontend/src/Places.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Location from \"./Location\";\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction handleSave() {\n  fetch('http://localhost:9292/locations', {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"city\": city,\n      \"state\": state,\n      \"country\": country\n    })\n  });\n}\n\nfunction Places(_ref) {\n  _s();\n\n  let {\n    places\n  } = _ref;\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const placesArray = places.map(item => /*#__PURE__*/_jsxDEV(Location, {\n    city: item.city,\n    state: item.state,\n    country: item.country,\n    id: item.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 1\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [placesArray, /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setCity(event.target.value),\n        value: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setState(event.target.value),\n        value: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => setCountry(event.target.value),\n        value: country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Places, \"8bLIb8JTSJAjGnLvyRl7mELy7Sc=\");\n\n_c = Places;\nexport default Places;\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"sources":["/Users/dom/Desktop/development/flatiron/mod3/phase-3-project-favorite-list/favlist-frontend/src/Places.js"],"names":["React","useEffect","useState","Location","Button","handleSave","fetch","method","headers","body","JSON","stringify","city","state","country","Places","places","setCity","setState","setCountry","placesArray","map","item","id","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;;AAMA,SAASC,UAAT,GAAqB;AACjBC,EAAAA,KAAK,CAAC,iCAAD,EAAoC;AACrCC,IAAAA,MAAM,EAAE,MAD6B;AAErCC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAF4B;AAGrCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,cAAQC,IADS;AAEjB,eAASC,KAFQ;AAGjB,iBAAWC;AAHM,KAAf;AAH+B,GAApC,CAAL;AASH;;AAED,SAASC,MAAT,OAAyB;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AAErB,QAAM,CAACJ,IAAD,EAAOK,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQK,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUK,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AAEJ,QAAMkB,WAAW,GAAGJ,MAAM,CAACK,GAAP,CAAWC,IAAI,iBACnC,QAAC,QAAD;AACA,IAAA,IAAI,EAAEA,IAAI,CAACV,IADX;AAEA,IAAA,KAAK,EAAEU,IAAI,CAACT,KAFZ;AAGA,IAAA,OAAO,EAAES,IAAI,CAACR,OAHd;AAIA,IAAA,EAAE,EAAEQ,IAAI,CAACC;AAJT;AAAA;AAAA;AAAA;AAAA,UADoB,CAApB;AASA,sBACA;AAAA,eACCH,WADD,eAEI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,QAAQ,EAAGI,KAAD,IAAWP,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnC;AAAyD,QAAA,KAAK,EAAEd;AAAhE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,QAAQ,EAAGY,KAAD,IAAWN,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApC;AAA0D,QAAA,KAAK,EAAEb;AAAjE;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAO,QAAA,QAAQ,EAAGW,KAAD,IAAWL,UAAU,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAtC;AAA4D,QAAA,KAAK,EAAEZ;AAAnE;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYQ,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAET,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZR;AAAA,kBADA;AAgBC;;GA/BQU,M;;KAAAA,M;AAiCT,eAAeA,MAAf","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport Location from \"./Location\"\nimport Button from 'react-bootstrap/Button';\n\n\n\n\n\nfunction handleSave(){\n    fetch('http://localhost:9292/locations', {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({\n            \"city\": city,\n            \"state\": state,\n            \"country\": country\n        })\n    })\n}\n\nfunction Places({places}){   \n    \n    const [city, setCity] = useState(\"\");\n    const [state, setState] = useState(\"\");\n    const [country, setCountry] = useState(\"\");\n\nconst placesArray = places.map(item => (\n<Location\ncity={item.city}\nstate={item.state}\ncountry={item.country}\nid={item.id}\n/>\n))\n\nreturn (\n<>\n{placesArray}\n    <form>\n        <label>City</label>\n        <input onChange={(event) => setCity(event.target.value)} value={city}></input>\n        <br></br>\n        <label>State</label>\n        <input onChange={(event) => setState(event.target.value)} value={state}></input>\n        <br></br>\n        <label>Country</label>\n        <input onChange={(event) => setCountry(event.target.value)} value={country}></input>\n    </form>\n        <Button variant=\"success\" onClick={handleSave}>Save</Button>\n</>\n)\n}\n\nexport default Places;"]},"metadata":{},"sourceType":"module"}